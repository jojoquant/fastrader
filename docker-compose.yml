version: '3'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports: 
      - ${RABBITMQ_PORT}:15672
    networks:
      - qyt_net
    env_file:
      - ./rabbitmq.env

  mongo:
    image: mongo
    restart: always
    env_file:
      - ./mongodb.env
    ports:
      - ${MONGO_PORT}:27017
    networks:
      - qyt_net
    # 数据持久化
    volumes:
      - /usr/local/mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    networks:
      - qyt_net
    env_file:
      - ./mongodb.env
    depends_on:
      - mongo

  influxdb:
    image: "influxdb"
    # container_name: influxdb
    ports:
      - ${INFLUXDB_PORT}:8083
      - ${INFLUXDB_HTTP_PORT}:8086
    networks:
      - qyt_net
    env_file: 
      - ./influxdb.env
    volumes:
      - /usr/local/influxdb/conf:/etc/influxdb
      - /usr/local/influxdb/data:/var/lib/influxdb/data
      - /usr/local/influxdb/meta:/var/lib/influxdb/meta
      - /usr/local/influxdb/wal:/var/lib/influxdb/wal
    restart: always
  
  grafana:
    image: "grafana/grafana"
    # hostname: grafana
    # container_name: grafana
    ports:
      - ${GRAFANA_PORT}:3000
    networks:
      - qyt_net
    volumes:
      - /usr/local/grafana/:/var/lib/grafana/
    depends_on:
      - influxdb
    restart: always

  nameko-microservice:
    build: "./microservices/"
    networks:
      - qyt_net
    env_file:
      - ./nameko.env
    depends_on:
      - rabbitmq
    restart: always

  nameko-app:
    build: "./app/"
    depends_on:
      - nameko-microservice
    ports:
      - ${NAMEKO_APP_PORT}:8089
    networks:
      - qyt_net
    env_file: .env
    restart: always

networks:
  qyt_net:
    driver: bridge
