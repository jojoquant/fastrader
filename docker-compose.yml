version: '3'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports: 
      - "15672:15672"
    networks:
      - qyt_net
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

  mongo:
    image: mongo
    restart: always
    env_file:
      - ./mongodb.env
    ports:
      - 27017:27017
    networks:
      - qyt_net
    # 数据持久化
    volumes:
      - /usr/local/mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - qyt_net
    env_file:
      - ./mongodb.env
    depends_on:
      - mongo

  influxdb:
    image: "influxdb"
    # container_name: influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
    networks:
      - qyt_net
    env_file: 
      - ./influxdb.env
    volumes:
      - /usr/local/influxdb/conf:/etc/influxdb
      - /usr/local/influxdb/data:/var/lib/influxdb/data
      - /usr/local/influxdb/meta:/var/lib/influxdb/meta
      - /usr/local/influxdb/wal:/var/lib/influxdb/wal
    restart: always
  
  grafana:
    image: "grafana/grafana"
    # hostname: grafana
    # container_name: grafana
    ports:
      - '3000:3000'
    networks:
      - qyt_net
    volumes:
      - /usr/local/grafana/:/var/lib/grafana/
    depends_on:
      - influxdb
    restart: always

  nameko-microservice:
    build: "./microservices/"
    networks:
      - qyt_net
    environment:
      - NAMEKO_USER=${NAMEKO_USER}
      - NAMEKO_PASS=${NAMEKO_PASS}
    depends_on:
      - rabbitmq
    restart: always

  nameko-app:
    build: "./app/"
    depends_on:
      - nameko-microservice
    ports:
      - "8089:8089"
    networks:
      - qyt_net
    env_file: .env
    restart: always

networks:
  qyt_net:
    driver: bridge
